{"version":3,"sources":["SpriteDisplay.js","PokemonTypes.js","App.js","index.js"],"names":["SpriteDisplay","spriteUrl","height","src","PokemonTypes","types","join","replace","l","toUpperCase","nullPokemon","sprites","front_default","undefined","App","useState","loading","setLoading","setSpriteUrl","pokemonName","setPokemonName","pokemonTypes","setPokemonTypes","pokedexId","setPokedexId","generation","setGeneration","setDamageRelations","doubleDamageFrom","setDoubleDamageFrom","quadrupleDamageFrom","setQuadrupleDamageFrom","halfDamageFrom","setHalfDamageFrom","oneFourthDamageFrom","setOneFourthDamageFrom","noDamageFrom","setNoDamageFrom","setTypes","options","setOptions","answerStatus","setAnswerStatus","userAnswered","setUserAnswered","points","setPoints","highScore","setHighScore","newRandomPokemon","Math","floor","random","Promise","all","GetPokemonInfo","GetPokemonSpeciesInfo","axios","get","then","results","pokemon","data","name","map","t","type","species","r","damageCalc","Object","fromEntries","damage_relations","double_damage_from","x","halfDamage","half_damage_from","keys","forEach","noDamage","no_damage_from","asdf","asdf2","asdf3","normalDamageFrom","push","superEffectiveDamageFrom","concat","notEffectiveDamageFrom","superEffectiveType","length","notEffectiveType","typesList","filter","otherTypes","randomType","indexOf","i","j","temp","GetOptions","catch","error","console","useEffect","selected","Button","variant","onClick","correct","checkAnswer","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5afb9e1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function SpriteDisplay({spriteUrl}) {\r\n\r\n  return (\r\n    <img height='250px' src={spriteUrl} />\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function PokemonTypes({ types }) {\r\n  return (\r\n    <h3>\r\n      {/* {types.map(t => (\r\n        <div key={t}>{t}</div>\r\n      ))} */}\r\n      {types.join(', ').replace(/\\b\\w/g, l => l.toUpperCase())}\r\n    </h3>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PokemonList from './PokemonList';\r\nimport Pagination from './Pagination';\r\nimport SpriteDisplay from './SpriteDisplay';\r\nimport axios from 'axios';\r\nimport PokemonTypes from './PokemonTypes';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Text from 'react-bootstrap/FormText';\r\n\r\nconst nullPokemon = {\r\n  sprites: { front_default: undefined }\r\n}\r\n\r\nfunction App() {\r\n  const [pokemon, setPokemon] = useState(nullPokemon);\r\n  const [listPokemon, setListPokemon] = useState([]);\r\n  const [currentPageUrl, setCurrentPageUrl] = useState('https://pokeapi.co/api/v2/pokemon');\r\n  const [nextPageUrl, setNextPageUrl] = useState();\r\n  const [prevPageUrl, setPrevPageUrl] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [spriteUrl, setSpriteUrl] = useState('');\r\n  const [pokemonName, setPokemonName] = useState('');\r\n  const [pokemonTypes, setPokemonTypes] = useState([]);\r\n  const [pokedexId, setPokedexId] = useState(0);\r\n  const [generation, setGeneration] = useState('');\r\n  const [currentRandomPokedexId, setCurrentRandomPokedexId] = useState();\r\n  const [damageRelations, setDamageRelations] = useState([]);\r\n  const [doubleDamageFrom, setDoubleDamageFrom] = useState([]);\r\n  const [quadrupleDamageFrom, setQuadrupleDamageFrom] = useState([]);\r\n  const [halfDamageFrom, setHalfDamageFrom] = useState([]);\r\n  const [oneFourthDamageFrom, setOneFourthDamageFrom] = useState([]);\r\n  const [noDamageFrom, setNoDamageFrom] = useState([]);\r\n  const [types, setTypes] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [answerStatus, setAnswerStatus] = useState(false);\r\n  const [userAnswered, setUserAnswered] = useState(undefined);\r\n  const [points, setPoints] = useState(0);\r\n  const [highScore, setHighScore] = useState(0);\r\n\r\n  useEffect(() => {\r\n    newRandomPokemon();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   setLoading(true);\r\n  //   let cancel;\r\n  //   axios.get(currentPageUrl, {\r\n  //     cancelToken: new axios.CancelToken(c => cancel = c)\r\n  //   })\r\n  //     .then(res => {\r\n  //       setLoading(false);\r\n  //       setPrevPageUrl(res.data.previous);\r\n  //       setNextPageUrl(res.data.next);\r\n  //       setListPokemon(res.data.results.map(p => p.name));\r\n  //     })\r\n\r\n  //   return cancel;\r\n  // }, [currentPageUrl]);\r\n\r\n  // useEffect(() => {\r\n  //   GetPokemonInfo(currentRandomPokedexId);\r\n  // }, [currentRandomPokedexId]);\r\n\r\n  // useEffect(() => {\r\n  //   setCurrentSpriteUrl(pokemon.sprites.front_default);\r\n  // }, [pokemon]);\r\n\r\n  function newRandomPokemon() {\r\n    const pokedexId = Math.floor(Math.random() * 898);\r\n    // const pokedexId = 397;\r\n    setLoading(true);\r\n    setPokedexId(pokedexId);\r\n    // setCurrentRandomPokedexId(pokedexId);\r\n    Promise.all([GetPokemonInfo(pokedexId), GetPokemonSpeciesInfo(pokedexId), GetTypes()])\r\n      .then(results => {\r\n\r\n        const pokemon = results[0].data;\r\n        setSpriteUrl(pokemon.sprites.front_default);\r\n        setPokemonName(pokemon.name);\r\n        const types = pokemon.types.map(t => t.type.name);\r\n        setPokemonTypes(types);\r\n\r\n        const species = results[1].data;\r\n        setGeneration(species.generation.name);\r\n\r\n        Promise.all(types.map(t => axios.get(`https://pokeapi.co/api/v2/type/${t}`)))\r\n          .then(r => {\r\n            setLoading(false);\r\n            let damageCalc = Object.fromEntries(r[0].data.damage_relations.double_damage_from.map(x => [x.name, 2]));\r\n            const halfDamage = Object.fromEntries(r[0].data.damage_relations.half_damage_from.map(x => [x.name, 0.5]));\r\n            Object.keys(halfDamage).forEach(x => {\r\n              damageCalc[x] = 0.5;\r\n            });\r\n            const noDamage = Object.fromEntries(r[0].data.damage_relations.no_damage_from.map(x => [x.name, 0]));\r\n            Object.keys(noDamage).forEach(x => {\r\n              damageCalc[x] = noDamage[x];\r\n            });\r\n            if (r[1]) {\r\n              let asdf = Object.fromEntries(r[1].data.damage_relations.double_damage_from.map(x => [x.name, 2]));\r\n              Object.keys(asdf).forEach(x => {\r\n                if (damageCalc[x]) {\r\n                  damageCalc[x] *= asdf[x];\r\n                } else {\r\n                  damageCalc[x] = asdf[x];\r\n                }\r\n              })\r\n              let asdf2 = Object.fromEntries(r[1].data.damage_relations.half_damage_from.map(x => [x.name, 0.5]));\r\n              Object.keys(asdf2).forEach(x => {\r\n                if (damageCalc[x]) {\r\n                  damageCalc[x] *= asdf2[x];\r\n                } else {\r\n                  damageCalc[x] = asdf2[x];\r\n                }\r\n              })\r\n              const asdf3 = Object.fromEntries(r[1].data.damage_relations.no_damage_from.map(x => [x.name, 0]));\r\n              Object.keys(asdf3).forEach(x => {\r\n                if (damageCalc[x]) {\r\n                  damageCalc[x] *= asdf3[x];\r\n                } else {\r\n                  damageCalc[x] = asdf3[x];\r\n                }\r\n              })\r\n            }\r\n            let doubleDamageFrom = [];\r\n            let quadrupleDamageFrom = [];\r\n            let halfDamageFrom = [];\r\n            let oneFourthDamageFrom = [];\r\n            let noDamageFrom = [];\r\n            let normalDamageFrom = [];\r\n            let types = [];\r\n            results[2].data.results.forEach(x => {\r\n              if (x.name != 'unknown' && x.name != 'shadow') {\r\n                types.push(x.name);\r\n              }\r\n            });\r\n            setTypes(types);\r\n            types.forEach(x => {\r\n              if (damageCalc[x] == 2) {\r\n                doubleDamageFrom.push(x);\r\n              } else if (damageCalc[x] == 4) {\r\n                quadrupleDamageFrom.push(x)\r\n              } else if (damageCalc[x] == 0.5) {\r\n                halfDamageFrom.push(x);\r\n              } else if (damageCalc[x] == 0.25) {\r\n                oneFourthDamageFrom.push(x);\r\n              } else if (damageCalc[x] == 0) {\r\n                noDamageFrom.push(x);\r\n              } else {\r\n                normalDamageFrom.push(x);\r\n              }\r\n            });\r\n            setDoubleDamageFrom(doubleDamageFrom);\r\n            setQuadrupleDamageFrom(quadrupleDamageFrom);\r\n            setHalfDamageFrom(halfDamageFrom);\r\n            setOneFourthDamageFrom(oneFourthDamageFrom);\r\n            setNoDamageFrom(noDamageFrom);\r\n            setDamageRelations(damageCalc);\r\n            GetOptions(doubleDamageFrom, quadrupleDamageFrom, halfDamageFrom, oneFourthDamageFrom, noDamageFrom, types);\r\n          })\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      })\r\n  }\r\n\r\n  function GetPokemonInfo(pokedexId) {\r\n    return axios.get('https://pokeapi.co/api/v2/pokemon/' + pokedexId);\r\n  }\r\n\r\n  function GetPokemonSpeciesInfo(pokedexId) {\r\n    return axios.get('https://pokeapi.co/api/v2/pokemon-species/' + pokedexId);\r\n  }\r\n\r\n  function GetTypes() {\r\n    return axios.get('https://pokeapi.co/api/v2/type/');\r\n  }\r\n\r\n  // function gotoPrevPage() {\r\n  //   setCurrentPageUrl(prevPageUrl);\r\n  // }\r\n\r\n  // function gotoNextPage() {\r\n  //   setCurrentPageUrl(nextPageUrl);\r\n  // }\r\n\r\n  function GetOptions(doubleDamageFrom, quadrupleDamageFrom, halfDamageFrom, oneFourthDamageFrom, noDamageFrom, types) {\r\n    const superEffectiveDamageFrom = doubleDamageFrom.concat(quadrupleDamageFrom);\r\n    const notEffectiveDamageFrom = halfDamageFrom.concat(oneFourthDamageFrom).concat(noDamageFrom);\r\n    const superEffectiveType = superEffectiveDamageFrom[Math.floor(Math.random() * superEffectiveDamageFrom.length)];\r\n    const notEffectiveType = notEffectiveDamageFrom[Math.floor(Math.random() * notEffectiveDamageFrom.length)];\r\n    const typesList = types.filter(t => t != superEffectiveType && t != notEffectiveType);\r\n\r\n    let otherTypes = [];\r\n    while (otherTypes.length < 2) {\r\n      const randomType = typesList[Math.floor(Math.random() * typesList.length)];\r\n      if (otherTypes.indexOf(randomType) == -1) {\r\n        otherTypes.push(randomType);\r\n      }\r\n    }\r\n    let options = [superEffectiveType].concat([notEffectiveType]).concat(otherTypes);\r\n\r\n    // Randomize Options Array\r\n    for (let i = options.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * i);\r\n      const temp = options[i];\r\n      options[i] = options[j];\r\n      options[j] = temp;\r\n    }\r\n\r\n    // console.log('typessszz', superEffectiveType, notEffectiveType, otherTypes);\r\n    setOptions(options);\r\n  }\r\n\r\n  function checkAnswer(type) {\r\n    let correct = doubleDamageFrom.indexOf(type) != -1 || quadrupleDamageFrom.indexOf(type) != -1;\r\n    if (!userAnswered && correct) {\r\n      setPoints(points + 1);\r\n      if (highScore < points + 1) {\r\n        setHighScore(points + 1);\r\n      }\r\n    }\r\n    setUserAnswered(type);\r\n    setAnswerStatus(correct);\r\n  }\r\n\r\n  if (loading) return 'Loading...';\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n      High Score: {highScore}\r\n      </div>\r\n      {/* <PokemonList pokemon={listPokemon}></PokemonList>\r\n      <Pagination\r\n        gotoPrevPage={prevPageUrl ? gotoPrevPage : null}\r\n        gotoNextPage={nextPageUrl ? gotoNextPage : null}\r\n      >\r\n      </Pagination> */}\r\n      <div>\r\n        {spriteUrl && <SpriteDisplay spriteUrl={spriteUrl} />}\r\n      </div>\r\n      <h1>\r\n        {pokemonName.replace(/\\b\\w/g, l => l.toUpperCase())}\r\n      </h1>\r\n      {userAnswered && (\r\n        <>\r\n          <h3>\r\n            Pokedex Number #{pokedexId}\r\n          </h3>\r\n          <h4>\r\n            {generation.replace(/\\b\\w/g, l => l.toUpperCase())}\r\n          </h4>\r\n          <PokemonTypes types={pokemonTypes}></PokemonTypes>\r\n          <div>\r\n            Double Damage From: {doubleDamageFrom.join(', ').replace(/\\b\\w/g, l => l.toUpperCase())}\r\n          </div>\r\n          <div>\r\n            Quadruple Damage From: {quadrupleDamageFrom.join(', ').replace(/\\b\\w/g, l => l.toUpperCase())}\r\n          </div>\r\n          <div>\r\n            Half Damage From: {halfDamageFrom.join(', ').replace(/\\b\\w/g, l => l.toUpperCase())}\r\n          </div>\r\n          <div>\r\n            One Fourth Damage From: {oneFourthDamageFrom.join(', ').replace(/\\b\\w/g, l => l.toUpperCase())}\r\n          </div>\r\n          <div>\r\n            No Damage From: {noDamageFrom.join(', ').replace(/\\b\\w/g, l => l.toUpperCase())}\r\n          </div>\r\n        </>\r\n      )}\r\n      {/* <button onClick={GetOptions}>Get Options</button> */}\r\n      {!userAnswered &&\r\n        <h2>\r\n          Select the type that would be effective against this Pokemon! 😎👌\r\n      </h2>\r\n      }\r\n      <div>\r\n        {options.length > 0 && options.map((x, i) => {\r\n          let selected = false;\r\n          if (x == userAnswered) {\r\n            selected = true;\r\n          }\r\n          return (\r\n            <>\r\n              <Button\r\n                variant={selected ? answerStatus ? 'success' : 'danger' : 'primary'}\r\n                key={x}\r\n                onClick={() => checkAnswer(x)}\r\n                disabled={userAnswered}\r\n              >\r\n                {x}\r\n              </Button>\r\n              {i % 2 == 1 && <br />}\r\n            </>\r\n          )\r\n        })}\r\n\r\n      </div>\r\n      <h1>\r\n        {userAnswered && answerStatus && \"GOOOOOOD JOB 😜\"}\r\n        {userAnswered && !answerStatus && \"oh noo... 😔\"}\r\n      </h1>\r\n      <div>\r\n        {userAnswered && (\r\n          <Button onClick={() => {\r\n            if (!answerStatus) {\r\n              setPoints(0);\r\n            }\r\n            setUserAnswered(undefined);\r\n            newRandomPokemon();\r\n          }\r\n          }>{answerStatus ? 'Anotha\\' one' : 'Try Again?'}</Button>\r\n        )}\r\n      </div>\r\n      <div>\r\n        Points: {points}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}