{"version":3,"sources":["App.js","index.js"],"names":["App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0KA4HeA,MAjHf,WA6FE,OACE,oDCrGJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.17b457a1.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PokemonList from './PokemonList';\r\nimport Pagination from './Pagination';\r\nimport SpriteDisplay from './SpriteDisplay';\r\nimport axios from 'axios';\r\nimport PokemonTypes from './PokemonTypes';\r\n\r\n// const nullPokemon = {\r\n//   sprites: {front_default: undefined}\r\n// }\r\n\r\nfunction App() {\r\n  // const [pokemon, setPokemon] = useState(nullPokemon);\r\n  // const [listPokemon, setListPokemon] = useState([]);\r\n  // const [currentPageUrl, setCurrentPageUrl] = useState('https://pokeapi.co/api/v2/pokemon');\r\n  // const [nextPageUrl, setNextPageUrl] = useState();\r\n  // const [prevPageUrl, setPrevPageUrl] = useState();\r\n  // const [loading, setLoading] = useState(true);\r\n  // const [spriteUrl, setSpriteUrl] = useState();\r\n  // const [pokemonName, setPokemonName] = useState('');\r\n  // const [pokemonTypes, setPokemonTypes] = useState([]);\r\n  // const [pokedexId, setPokedexId] = useState();\r\n  // const [generation, setGeneration] = useState('');\r\n  // const [currentRandomPokedexId, setCurrentRandomPokedexId] = useState();\r\n\r\n  // useEffect(() => {\r\n  //   const pokedexId = Math.floor(Math.random() * 898);\r\n  //   setLoading(true);\r\n  //   setPokedexId(pokedexId);\r\n  //   // setCurrentRandomPokedexId(pokedexId);\r\n  //   Promise.all([GetPokemonInfo(pokedexId), GetPokemonSpeciesInfo(pokedexId)])\r\n  //     .then(results => {\r\n  //       setLoading(false);\r\n  //       const pokemon = results[0].data;\r\n  //       setSpriteUrl(pokemon.sprites.front_default);\r\n  //       setPokemonName(pokemon.name);\r\n  //       setPokemonTypes(pokemon.types.map(t => t.type.name));\r\n\r\n  //       const species = results[1].data;\r\n  //       setGeneration(species.generation.name);\r\n  //     });\r\n  // }, []);\r\n\r\n  // // useEffect(() => {\r\n  // //   setLoading(true);\r\n  // //   let cancel;\r\n  // //   axios.get(currentPageUrl, {\r\n  // //     cancelToken: new axios.CancelToken(c => cancel = c)\r\n  // //   })\r\n  // //     .then(res => {\r\n  // //       setLoading(false);\r\n  // //       setPrevPageUrl(res.data.previous);\r\n  // //       setNextPageUrl(res.data.next);\r\n  // //       setListPokemon(res.data.results.map(p => p.name));\r\n  // //     })\r\n\r\n  // //   return cancel;\r\n  // // }, [currentPageUrl]);\r\n\r\n  // // useEffect(() => {\r\n  // //   GetPokemonInfo(currentRandomPokedexId);\r\n  // // }, [currentRandomPokedexId]);\r\n\r\n  // // useEffect(() => {\r\n  // //   setCurrentSpriteUrl(pokemon.sprites.front_default);\r\n  // // }, [pokemon]);\r\n\r\n  // function GetPokemonInfo(pokedexId) {\r\n  //   // setLoading(true);\r\n  //   // let cancel;\r\n  //   return axios.get('https://pokeapi.co/api/v2/pokemon/' + pokedexId);\r\n  //     // .then(p => {\r\n  //     //   // setLoading(false);\r\n  //     //   // setPokemon(p.data);\r\n  //     //   const pokemon = p.data;\r\n  //     //   setSpriteUrl(pokemon.sprites.front_default);\r\n  //     //   setPokemonName(pokemon.name);\r\n  //     //   setPokemonTypes(pokemon.types.map(t => t.type.name));\r\n  //     // });\r\n      \r\n  //   // return cancel;\r\n  // }\r\n\r\n  // function GetPokemonSpeciesInfo(pokedexId) {\r\n  //   // setLoading(true);\r\n  //   // let cancel;\r\n  //   return axios.get('https://pokeapi.co/api/v2/pokemon-species/' + pokedexId);\r\n  //     // .then(p => {\r\n  //     //   // setLoading(false);\r\n  //     //   const pokemon = p.data;\r\n  //     //   setGeneration(pokemon.generation.name);\r\n  //     // });\r\n  // }\r\n\r\n  // // function gotoPrevPage() {\r\n  // //   setCurrentPageUrl(prevPageUrl);\r\n  // // }\r\n\r\n  // // function gotoNextPage() {\r\n  // //   setCurrentPageUrl(nextPageUrl);\r\n  // // }\r\n\r\n  // if (loading) return 'Loading...';\r\n\r\n  return (\r\n    <>\r\n    Hello World\r\n      {/* <div>\r\n        {spriteUrl && <SpriteDisplay spriteUrl={spriteUrl} /> }\r\n      </div>\r\n      <div>\r\n        {pokemonName.replace(/\\b\\w/g, l => l.toUpperCase())}\r\n      </div>\r\n      <div>\r\n        Pokedex Number #{pokedexId}\r\n      </div>\r\n      <div>\r\n        {generation.replace(/\\b\\w/g, l => l.toUpperCase())}\r\n      </div>\r\n      <PokemonTypes types={pokemonTypes}></PokemonTypes> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}